name: Deploy To VPS

on:
  workflow_dispatch:
    branches:
      - master
  push:
    paths-ignore:
      - 'package-lock.json'
      - 'package.json'
    branches:
      - master


jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: "Checkout branch"
        uses: actions/checkout@master
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: build
        run: |
          npm ci
          npm run build
      - name: Prep
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy
        run: |
          mkdir Jerasaurus
          mv build Jerasaurus
          mv package-lock.json Jerasaurus
          mv package.json Jerasaurus
          zip -r Jerasaurus.zip Jerasaurus
          scp -o StrictHostKeyChecking=no -o LogLevel=quiet Jerasaurus.zip ${{ secrets.SSH_STRING }}:~/Jerasaurus.zip
          
          ssh -o StrictHostKeyChecking=no -o LogLevel=quiet ${{ secrets.SSH_STRING }} "pm2 stop node > /dev/null && rm -r Jerasaurus && unzip Jerasaurus.zip  && rm Jerasaurus.zip && cd Jerasaurus && npm ci && pm2 restart node > /dev/null"
  lighthouse:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: "Warm up CDN"
        run: "curl --compressed --location jerasaurus.duckarmada.com > /dev/null"

      - uses: actions/checkout@v3
      - name: Audit URLs using Lighthouse
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            https://jerasaurus.duckarmada.com/
            https://jerasaurus.duckarmada.com/blog
            https://jerasaurus.duckarmada.com/blog/te
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
      - name: Send notification to discord webhook
        run: |
            outputString=$(echo ${{ steps.lighthouse.outputs.links }} | jq -r 'to_entries | map("\(.key): \(.value|tostring)") | .[]') 
            curl -X POST -H "Content-Type: application/json" -d "{\"content\": \"${outputString}\"}" ${{ secrets.DISCORD_WEBHOOK }}
